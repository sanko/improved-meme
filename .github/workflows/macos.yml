name: macOS

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/coverage.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/msys2.yml'
      - '.github/workflows/wasm.yml'
      - '.github/workflows/windows.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'

jobs:
  build:
    name: "${{ matrix.os }}-${{ matrix.mode }}"
    strategy:
      matrix:
        os: [macos-latest]
        arch: [x86_64]
        mode: [release, debug, releasedbg, coverage]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - name: Get current date as package key
      id: cache_key
      run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    - name: Install system dependencies
      run: |
        pip3 install conan

    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@dev
        actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

    - name: Update xmake repository
      run: xmake repo --update

    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: macOS-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}

    - name: Configure xmake and install dependencies
      run: xmake config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --ccache=n --tests=y --yes

    - name: Build
      run: xmake --yes

    - name: Run unit tests
      if: matrix.mode != 'releasedbg'
      run: xmake run -g tests

    #~ - name: Configure xmake for installation
      #~ run: xmake config -v --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --ccache=n --tests=y --yes

    #~ # Install the result files
    #~ - name: Install
      #~ run: xmake install -vo package

    #~ # Upload artifacts
    #~ - uses: actions/upload-artifact@v3
      #~ with:
        #~ name: nazaraengine-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        #~ path: package
