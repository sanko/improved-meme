---
    jobs:
      build:
        name: "Windows [${{ inputs.os }} on ${{ inputs.arch }}]"
        runs-on: 'windows-${{ inputs.os }}'
        steps:
          - uses: actions/checkout@v4
          - name: Setup xmake
            uses: xmake-io/github-action-setup-xmake@v1
            with:
              xmake-version: latest

          - name: Set xmake package cache path
            run: echo "XMAKE_PKG_CACHEDIR=$(pwd)/xmake-cache" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      
          - name: Retrieve xmake cache for packages
            uses: actions/cache@v4
            with:
                path: xmake-cache
                key: ${{ matrix.os }}-${{ matrix.arch }}
      
          - name: Set release arch name
            run: |
                if ("${{ matrix.arch }}" -eq "x64") {
                  Write-Output "RELEASE_NAME=win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
                } else {
                  Write-Output "RELEASE_NAME=win32" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
                }
              
          - name: Build
            run: |
                xmake f -v -a ${{ matrix.arch }} -y
                xmake -vD -y
      
          - name: Run tests
            run: |
                xmake test -v
      
          - name: Get target name
            id: get_target_name
            run: |
                $targetName = (Select-String -Path xmake.lua -Pattern 'target\("(.+)"\)' | ForEach-Object { $_.Matches.Groups[1].Value })
                echo "::set-output name=target_name::$targetName"
      
          - name: Rename exe file
            run: mv "build/windows/${{ matrix.arch }}/release/${{ steps.get_target_name.outputs.target_name }}.exe" "build/windows/${{ matrix.arch }}/release/${{ steps.get_target_name.outputs.target_name }}_${{ matrix.arch }}.exe"
      
          - name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
                name: exe-file-${{ matrix.arch }}
                path: build/windows/${{ matrix.arch }}/release/${{ steps.get_target_name.outputs.target_name }}_${{ matrix.arch }}.exe
      
          - name: Run tests
            run: |
              if ($LASTEXITCODE -eq 0) {
                xmake --version > test-output-${{ inputs.os }}-${{ inputs.flags }}.txt
              } else {
                Out-File -FilePath "test-output-${{ inputs.os }}-${{ inputs.flags }}.txt" -InputObject "Error" -Append
                exit $LASTEXITCODE
              }
          - name: Upload results as artifact
            uses: actions/upload-artifact@v4.0.0
            with:
              if-no-files-found: error
              name: "test-output-Windows-${{ inputs.os }}-${{ inputs.arch }}"
              path: "test-output-Windows-${{ inputs.os }}-${{ inputs.arch }}.txt"
              retention-days: 1
    name: windows module
    on:
      workflow_call:
        inputs:
          flags:
            required: false
            type: string
          os:
            required: true
            type: string
          arch:
            required: true
            type: string
